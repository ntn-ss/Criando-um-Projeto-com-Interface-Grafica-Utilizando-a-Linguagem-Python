from kivy.app import App
from kivy.lang import Builder
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.properties import ObjectProperty
from kivy.uix.popup import Popup
from kivy.uix.label import Label
from database import Database

class CreateAccountWindow(Screen):
    namee = ObjectProperty(None)
    email = ObjectProperty(None)
    password = ObjectProperty(None)
    
    def submit(self):
        if self.namee.text != '' and self.email.text != '' and self.email.text.count('@')==1 and self.email.text.count('.')>0:
            if self.password.text != '':
                db.addUser(self.email.text, self.password.text, self.namee.text)
                self.reset()
                
                sm.current='Entrar'
            else:
                self.invalidForm()
        else:
            self.invalidForm()
    
    def login(self):
        self.reset()
        sm.current='Entrar'
        
    def reset(self):
        self.email.text=''
        self.password.text=''
        self.namee.text=''
    
class LoginWindow(Screen):
    email=ObjectProperty(None)
    password=ObjectProperty(None)
    
    def loginBtn(self):
        if db.validate(self.email.text, self.password.text):
            MainWindow.current = self.email.text
            self.reset()
            sm.current='Página Inicial'
        else:
            self.manager.invalidLogin()
    
    def createBtn(self):
        self.reset()
        self.manager.current='Cadastrar'
    
    def reset(self):
        self.email.text=''
        self.password.text=''
        
class MainWindow(Screen):
    n=ObjectProperty(None)
    created=ObjectProperty(None)
    email=ObjectProperty(None)
    current=''
    
    def logOut(self):
        sm.current='Login'
    
    def on_enter(self, *args):
        user_data = db.getUser(self.current)
        if user_data != -1:
            password, name, created = user_data
            self.n.text = f'Nome do usuário: {name}.'
            self.email.text = f'E-mail: {self.current}.'
            self.created.text = f'Criado em {created}.'
    
class WindowManager(ScreenManager):
    pass
    
    def invalidLogin(self):
        pop=Popup(
            title= 'Login inválido',
            content=Label(text='Usuário ou senha inválida.'),
            size_hint=(None, None), size = (400, 400))
        
        pop.open()
        
    def invalidForm(self):
        pop = Popup(
            title='Formulário inválido',
            content=Label(text='Por favor, preencha todos os campos com informações válidas.'),
            size_hint = (None, None), size = (400, 400))
        pop.open()
        
kv=Builder.load_file('main.kv')
sm=WindowManager()
db=Database('users.txt')

screens=[LoginWindow(name='Entrar'), CreateAccountWindow(name='Cadastrar'), MainWindow(name='Página Inicial')]
for screen in screens:
    sm.add_widget(screen)

sm.current='Entrar'

class MyMainApp(App):
    def build(self):
        return sm
    
if __name__ == '__main__':
    MyMainApp().run()